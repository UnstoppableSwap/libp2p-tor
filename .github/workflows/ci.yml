name: Continuous integration

on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build: 
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2

      - name: Check
        run: cargo check --all-features

      - name: Build
        run: cargo build --all-features

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: Swatinem/rust-cache@v2

      - name: Run tests with all features enabled
        run: cargo test --all-features

      - name: Run tests without features enabled
        run: cargo test

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust-version: [ stable, beta, nightly ]
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust-version }}
          components: clippy

      - uses: Swatinem/rust-cache@v2

      - name: Run cargo clippy with all features enabled
        run: cargo clippy --all-features

      - name: Run cargo clippy without any features enabled
        run: cargo clippy

  rustfmt:
    name: Rust format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Check formatting
        run: cargo fmt -- --check

